{
  "contractName": "Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "supply",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersEnabled",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "enabled",
          "type": "bool"
        }
      ],
      "name": "updateTransfersReturningFalse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.3+commit.10d17f24\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersReturningFalse\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"updateTransfersEnabled\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"supply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/andy/workspace/moloch/contracts/tokens/Token.sol\":\"Token\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/andy/workspace/moloch/contracts/oz/ERC20.sol\":{\"keccak256\":\"0x4d935cde28a02d3e187533c621663a41fcce26f57bec83d5e69b5a2a3ae7544d\",\"urls\":[\"bzzr://81ee219f80458be778c91c914b5afa44a39671cfac5cf02bf046157c756eb5f1\"]},\"/Users/andy/workspace/moloch/contracts/oz/IERC20.sol\":{\"keccak256\":\"0x7b907219f231d636a3340b490f6986ca107235b6a0f57d3e21e884cef57711ce\",\"urls\":[\"bzzr://7835dc91039e37652f6064ba3913660d56c811bf65eebf1d7150b278d557ba34\"]},\"/Users/andy/workspace/moloch/contracts/oz/SafeMath.sol\":{\"keccak256\":\"0xcd7cf8e2eba8fb53c3d88274c02cdd041c682f8a5f96ad7441724fb017830291\",\"urls\":[\"bzzr://c1b3addd8d8b38ce7fab68056e040b142461b41769b1453bde5126dd0543a75e\"]},\"/Users/andy/workspace/moloch/contracts/tokens/Token.sol\":{\"keccak256\":\"0x16f57652aca2a986303bf5fef9909824248a01abaad3f1fa8247ae3e424dab9c\",\"urls\":[\"bzzr://6552a20ad82028ffc91f91dd7feec74edc61f0b5f004242edb1a2b10ca344ac8\"]}},\"version\":1}",
  "bytecode": "0x60806040526003805461ff001960ff1990911660011716905534801561002457600080fd5b506040516020806108138339810180604052602081101561004457600080fd5b5051610059338264010000000061005f810204565b50610130565b600160a060020a038216151561007457600080fd5b60025461008e908264010000000061068961011782021704565b600255600160a060020a0382166000908152602081905260409020546100c1908264010000000061068961011782021704565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561012957600080fd5b9392505050565b6106d48061013f6000396000f3fe608060405234801561001057600080fd5b50600436106100db576000357c010000000000000000000000000000000000000000000000000000000090048063a457c2d711610093578063b43c36ec11610078578063b43c36ec14610268578063d34a216114610289578063dd62ed3e146102a8576100db565b8063a457c2d7146101f6578063a9059cbb1461022f576100db565b806323b872dd116100c457806323b872dd14610147578063395093511461018a57806370a08231146101c3576100db565b8063095ea7b3146100e057806318160ddd1461012d575b600080fd5b610119600480360360408110156100f657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102e3565b604080519115158252519081900360200190f35b6101356102fa565b60408051918252519081900360200190f35b6101196004803603606081101561015d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610300565b610119600480360360408110156101a057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610364565b610135600480360360208110156101d957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103ad565b6101196004803603604081101561020c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103d5565b6101196004803603604081101561024557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561041e565b6102876004803603602081101561027e57600080fd5b5035151561045b565b005b6102876004803603602081101561029f57600080fd5b50351515610475565b610135600480360360408110156102be57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610488565b60006102f03384846104c0565b5060015b92915050565b60025490565b600061030d848484610573565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461035a918691610355908663ffffffff61067416565b6104c0565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102f0918590610355908663ffffffff61068916565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102f0918590610355908663ffffffff61067416565b600354600090610100900460ff1615610439575060006102f4565b60035460ff16151561044a57600080fd5b610454838361069b565b9392505050565b600380549115156101000261ff0019909216919091179055565b6003805460ff1916911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff821615156104e257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561050457600080fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216151561059557600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546105cb908263ffffffff61067416565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461060d908263ffffffff61068916565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561068357600080fd5b50900390565b60008282018381101561045457600080fd5b60006102f033848461057356fea165627a7a72305820fbf08f32c175690725198f5fc519a4c8a7c0bcb637a51fc7531c3023565dacb90029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100db576000357c010000000000000000000000000000000000000000000000000000000090048063a457c2d711610093578063b43c36ec11610078578063b43c36ec14610268578063d34a216114610289578063dd62ed3e146102a8576100db565b8063a457c2d7146101f6578063a9059cbb1461022f576100db565b806323b872dd116100c457806323b872dd14610147578063395093511461018a57806370a08231146101c3576100db565b8063095ea7b3146100e057806318160ddd1461012d575b600080fd5b610119600480360360408110156100f657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356102e3565b604080519115158252519081900360200190f35b6101356102fa565b60408051918252519081900360200190f35b6101196004803603606081101561015d57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610300565b610119600480360360408110156101a057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610364565b610135600480360360208110156101d957600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166103ad565b6101196004803603604081101561020c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356103d5565b6101196004803603604081101561024557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561041e565b6102876004803603602081101561027e57600080fd5b5035151561045b565b005b6102876004803603602081101561029f57600080fd5b50351515610475565b610135600480360360408110156102be57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610488565b60006102f03384846104c0565b5060015b92915050565b60025490565b600061030d848484610573565b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602090815260408083203380855292529091205461035a918691610355908663ffffffff61067416565b6104c0565b5060019392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102f0918590610355908663ffffffff61068916565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490916102f0918590610355908663ffffffff61067416565b600354600090610100900460ff1615610439575060006102f4565b60035460ff16151561044a57600080fd5b610454838361069b565b9392505050565b600380549115156101000261ff0019909216919091179055565b6003805460ff1916911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b73ffffffffffffffffffffffffffffffffffffffff821615156104e257600080fd5b73ffffffffffffffffffffffffffffffffffffffff8316151561050457600080fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216151561059557600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020546105cb908263ffffffff61067416565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220939093559084168152205461060d908263ffffffff61068916565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561068357600080fd5b50900390565b60008282018381101561045457600080fd5b60006102f033848461057356fea165627a7a72305820fbf08f32c175690725198f5fc519a4c8a7c0bcb637a51fc7531c3023565dacb90029",
  "sourceMap": "52:640:7:-;;;82:28;;;-1:-1:-1;;;;82:28:7;;;106:4;82:28;116:36;;;159:77;5:2:-1;;;;30:1;27;20:12;5:2;159:77:7;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;159:77:7;204:25;210:10;159:77;204:5;;;;:25;:::i;:::-;159:77;52:640;;5807:263:3;-1:-1:-1;;;;;5881:21:3;;;;5873:30;;;;;;5929:12;;:23;;5946:5;5929:16;;;;;;:23;:::i;:::-;5914:12;:38;-1:-1:-1;;;;;5983:18:3;;:9;:18;;;;;;;;;;;:29;;6006:5;5983:22;;;;;;:29;:::i;:::-;-1:-1:-1;;;;;5962:18:3;;:9;:18;;;;;;;;;;;:50;;;;6027:36;;;;;;;5962:18;;:9;;6027:36;;;;;;;;;;5807:263;;:::o;560:145:5:-;618:7;649:5;;;672:6;;;;664:15;;;;;;697:1;560:145;-1:-1:-1;;;560:145:5:o;52:640:7:-;;;;;;;",
  "deployedSourceMap": "52:640:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:640:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:145:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2736:145:3;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;929:89;;;:::i;:::-;;;;;;;;;;;;;;;;3344:224;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3344:224:3;;;;;;;;;;;;;;;;;;:::i;4071:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4071:200:3;;;;;;;;;:::i;1231:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:3;;;;:::i;4779:210::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4779:210:3;;;;;;;;;:::i;464:226:7:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;464:226:7;;;;;;;;;:::i;346:112::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;346:112:7;;;;:::i;:::-;;242:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;242:98:7;;;;:::i;1666:129:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1666:129:3;;;;;;;;;;;:::i;2736:145::-;2801:4;2817:36;2826:10;2838:7;2847:5;2817:8;:36::i;:::-;-1:-1:-1;2870:4:3;2736:145;;;;;:::o;929:89::-;999:12;;929:89;:::o;3344:224::-;3423:4;3439:26;3449:4;3455:2;3459:5;3439:9;:26::i;:::-;3502:14;;;;;;;:8;:14;;;;;;;;3490:10;3502:26;;;;;;;;;3475:65;;3484:4;;3502:37;;3533:5;3502:37;:30;:37;:::i;:::-;3475:8;:65::i;:::-;-1:-1:-1;3557:4:3;3344:224;;;;;:::o;4071:200::-;4176:10;4151:4;4197:20;;;:8;:20;;;;;;;;;:29;;;;;;;;;;4151:4;;4167:76;;4188:7;;4197:45;;4231:10;4197:45;:33;:45;:::i;1231:104::-;1312:16;;1286:7;1312:16;;;;;;;;;;;;1231:104::o;4779:210::-;4889:10;4864:4;4910:20;;;:8;:20;;;;;;;;;:29;;;;;;;;;;4864:4;;4880:81;;4901:7;;4910:50;;4944:15;4910:50;:33;:50;:::i;464:226:7:-;545:23;;525:4;;545:23;;;;;541:66;;;-1:-1:-1;591:5:7;584:12;;541:66;624:16;;;;616:25;;;;;;;;658;673:2;677:5;658:14;:25::i;:::-;651:32;464:226;-1:-1:-1;;;464:226:7:o;346:112::-;418:23;:33;;;;;;;-1:-1:-1;;418:33:7;;;;;;;;;346:112::o;242:98::-;307:16;:26;;-1:-1:-1;;307:26:7;;;;;;;;;;242:98::o;1666:129:3:-;1764:15;;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;6824:248::-;6916:21;;;;;6908:30;;;;;;6956:19;;;;;6948:28;;;;;;6987:15;;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;7034:31;;;;;;;;;;;;;;;;;6824:248;;;:::o;5208:256::-;5295:16;;;;;5287:25;;;;;;5341:15;;;:9;:15;;;;;;;;;;;:26;;5361:5;5341:26;:19;:26;:::i;:::-;5323:15;;;;:9;:15;;;;;;;;;;;:44;;;;5393:13;;;;;;;:24;;5411:5;5393:24;:17;:24;:::i;:::-;5377:13;;;;:9;:13;;;;;;;;;;;;:40;;;;5432:25;;;;;;;5377:13;;5432:25;;;;;;;;;;;;;5208:256;;;:::o;409:145:5:-;467:7;494:6;;;;486:15;;;;;;-1:-1:-1;523:5:5;;;409:145::o;560:::-;618:7;649:5;;;672:6;;;;664:15;;;;;1963:137:3;2024:4;2040:32;2050:10;2062:2;2066:5;2040:9;:32::i",
  "source": "pragma solidity ^0.5.2;\n\nimport \"../oz/ERC20.sol\";\n\ncontract Token is ERC20 {\n    bool transfersEnabled = true;\n    bool transfersReturningFalse = false;\n\n    constructor(uint256 supply) public {\n        _mint(msg.sender, supply);\n    }\n\n    function updateTransfersEnabled(bool enabled) external {\n        transfersEnabled = enabled;\n    }\n\n    function updateTransfersReturningFalse(bool enabled) external {\n        transfersReturningFalse = enabled;\n    }\n\n    function transfer(address to, uint256 value) public returns (bool) {\n        if (transfersReturningFalse) {\n            return false;\n        }\n        require(transfersEnabled);\n        return super.transfer(to, value);\n    }\n}\n",
  "sourcePath": "/Users/andy/workspace/moloch/contracts/tokens/Token.sol",
  "ast": {
    "absolutePath": "/Users/andy/workspace/moloch/contracts/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        3343
      ]
    },
    "id": 3344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3276,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/andy/workspace/moloch/contracts/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 3277,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 2688,
        "src": "25:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3278,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2687,
              "src": "70:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2687",
                "typeString": "contract ERC20"
              }
            },
            "id": 3279,
            "nodeType": "InheritanceSpecifier",
            "src": "70:5:7"
          }
        ],
        "contractDependencies": [
          2687,
          2756
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3343,
        "linearizedBaseContracts": [
          3343,
          2687,
          2756
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3282,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "82:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3280,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "82:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 3281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "106:4:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3285,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "116:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3283,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "116:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 3284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "147:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "194:42:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "210:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "210:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3293,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3287,
                        "src": "222:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3290,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2576,
                      "src": "204:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3295,
                  "nodeType": "ExpressionStatement",
                  "src": "204:25:7"
                }
              ]
            },
            "documentation": null,
            "id": 3297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3287,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "171:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:16:7"
            },
            "returnParameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:7"
            },
            "scope": 3343,
            "src": "159:77:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3306,
              "nodeType": "Block",
              "src": "297:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3302,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3282,
                      "src": "307:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3303,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "326:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "307:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "307:26:7"
                }
              ]
            },
            "documentation": null,
            "id": 3307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3299,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3307,
                  "src": "274:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:14:7"
            },
            "returnParameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:7"
            },
            "scope": 3343,
            "src": "242:98:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3316,
              "nodeType": "Block",
              "src": "408:50:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3312,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3285,
                      "src": "418:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3313,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3309,
                      "src": "444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "418:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 3317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3317,
                  "src": "385:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:7"
            },
            "returnParameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:7"
            },
            "scope": 3343,
            "src": "346:112:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "531:159:7",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3326,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3285,
                    "src": "545:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3330,
                  "nodeType": "IfStatement",
                  "src": "541:66:7",
                  "trueBody": {
                    "id": 3329,
                    "nodeType": "Block",
                    "src": "570:37:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "591:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3325,
                        "id": 3328,
                        "nodeType": "Return",
                        "src": "584:12:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3332,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3282,
                        "src": "624:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3361,
                        3362
                      ],
                      "referencedDeclaration": 3361,
                      "src": "616:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "616:25:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3319,
                        "src": "673:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3338,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "677:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3335,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3393,
                        "src": "658:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$3343",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 3336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2380,
                      "src": "658:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3325,
                  "id": 3340,
                  "nodeType": "Return",
                  "src": "651:32:7"
                }
              ]
            },
            "documentation": null,
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3319,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "482:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3321,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "494:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:27:7"
            },
            "returnParameters": {
              "id": 3325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "525:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:6:7"
            },
            "scope": 3343,
            "src": "464:226:7",
            "stateMutability": "nonpayable",
            "superFunction": 2380,
            "visibility": "public"
          }
        ],
        "scope": 3344,
        "src": "52:640:7"
      }
    ],
    "src": "0:693:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/andy/workspace/moloch/contracts/tokens/Token.sol",
    "exportedSymbols": {
      "Token": [
        3343
      ]
    },
    "id": 3344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3276,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/andy/workspace/moloch/contracts/oz/ERC20.sol",
        "file": "../oz/ERC20.sol",
        "id": 3277,
        "nodeType": "ImportDirective",
        "scope": 3344,
        "sourceUnit": 2688,
        "src": "25:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3278,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2687,
              "src": "70:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$2687",
                "typeString": "contract ERC20"
              }
            },
            "id": 3279,
            "nodeType": "InheritanceSpecifier",
            "src": "70:5:7"
          }
        ],
        "contractDependencies": [
          2687,
          2756
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3343,
        "linearizedBaseContracts": [
          3343,
          2687,
          2756
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3282,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "82:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3280,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "82:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 3281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "106:4:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3285,
            "name": "transfersReturningFalse",
            "nodeType": "VariableDeclaration",
            "scope": 3343,
            "src": "116:36:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3283,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "116:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 3284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "147:5:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3296,
              "nodeType": "Block",
              "src": "194:42:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3291,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "210:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "210:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3293,
                        "name": "supply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3287,
                        "src": "222:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3290,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2576,
                      "src": "204:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "204:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3295,
                  "nodeType": "ExpressionStatement",
                  "src": "204:25:7"
                }
              ]
            },
            "documentation": null,
            "id": 3297,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3287,
                  "name": "supply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3297,
                  "src": "171:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "171:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:16:7"
            },
            "returnParameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "194:0:7"
            },
            "scope": 3343,
            "src": "159:77:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3306,
              "nodeType": "Block",
              "src": "297:43:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3302,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3282,
                      "src": "307:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3303,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3299,
                      "src": "326:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "307:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3305,
                  "nodeType": "ExpressionStatement",
                  "src": "307:26:7"
                }
              ]
            },
            "documentation": null,
            "id": 3307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersEnabled",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3299,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3307,
                  "src": "274:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "273:14:7"
            },
            "returnParameters": {
              "id": 3301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "297:0:7"
            },
            "scope": 3343,
            "src": "242:98:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3316,
              "nodeType": "Block",
              "src": "408:50:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3312,
                      "name": "transfersReturningFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3285,
                      "src": "418:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3313,
                      "name": "enabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3309,
                      "src": "444:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "418:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3315,
                  "nodeType": "ExpressionStatement",
                  "src": "418:33:7"
                }
              ]
            },
            "documentation": null,
            "id": 3317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTransfersReturningFalse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3309,
                  "name": "enabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 3317,
                  "src": "385:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3308,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:7"
            },
            "returnParameters": {
              "id": 3311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:0:7"
            },
            "scope": 3343,
            "src": "346:112:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3341,
              "nodeType": "Block",
              "src": "531:159:7",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 3326,
                    "name": "transfersReturningFalse",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3285,
                    "src": "545:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3330,
                  "nodeType": "IfStatement",
                  "src": "541:66:7",
                  "trueBody": {
                    "id": 3329,
                    "nodeType": "Block",
                    "src": "570:37:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "591:5:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 3325,
                        "id": 3328,
                        "nodeType": "Return",
                        "src": "584:12:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3332,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3282,
                        "src": "624:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3331,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3361,
                        3362
                      ],
                      "referencedDeclaration": 3361,
                      "src": "616:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "616:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "616:25:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3337,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3319,
                        "src": "673:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3338,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3321,
                        "src": "677:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3335,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3393,
                        "src": "658:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Token_$3343",
                          "typeString": "contract super Token"
                        }
                      },
                      "id": 3336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2380,
                      "src": "658:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 3339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "658:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3325,
                  "id": 3340,
                  "nodeType": "Return",
                  "src": "651:32:7"
                }
              ]
            },
            "documentation": null,
            "id": 3342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3319,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "482:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3321,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "494:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:27:7"
            },
            "returnParameters": {
              "id": 3325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3324,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "525:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3323,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "524:6:7"
            },
            "scope": 3343,
            "src": "464:226:7",
            "stateMutability": "nonpayable",
            "superFunction": 2380,
            "visibility": "public"
          }
        ],
        "scope": 3344,
        "src": "52:640:7"
      }
    ],
    "src": "0:693:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.3+commit.10d17f24.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x8277541dE1254bdd45A76Ae6b10EF03Bbe05AC44",
      "transactionHash": "0xff3ae10b70f6397a3dda063a5d2c128c784ebd72b05ef2aa991404332ab9cc71"
    },
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x817bbDbC3e8A1204f3691d14bB44992841e3dB35",
      "transactionHash": "0x79986106ae11487d24eeec788f7edbd3dff69bc6559a15b8f95e3209e814c538"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-12-16T11:43:30.323Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
